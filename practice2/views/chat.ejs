<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>在线聊天室</title>
  <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
  <style>
    input {
      height: 24px;
      margin-right: 10px;
    }

    button {
      height: 24px;
      cursor: pointer;
      margin-right: 5px;
    }

    select {
      min-width: 100px;
      height: 28px;
    }
  </style>
</head>

<body>
  <h4>在线聊天室</h4>
  <hr>
  <input type="text" placeholder="请输入"><button type="button">Send</button>
  <select id="users"></select>
</body>

<script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"></script>
<script>
  $(function () {
    const token = localStorage.getItem('Authorization')
    if (!token) return location.href = '/login'
    const ws = new WebSocket(`ws://localhost:3030?token=${token}`)

    const MessageType = {
      Unauthorized: -1,
      Error: 0,
      GroupList: 1,
      GroupChat: 2,
      SingleChat: 3
    };

    const createMessage = (type, from, data) => {
      return JSON.stringify({
        type,
        from,
        data
      });
    };

    ws.onopen = () => {
      console.log('WebSocket already open')
    }

    ws.onmessage = ({ data }) => {
      const msgData = JSON.parse(data)
      switch (msgData.type) {
        case MessageType.Unauthorized:
          localStorage.removeItem('Authorization')
          location.href = '/login'
          break
        case MessageType.Error:
          break
        case MessageType.GroupList:
          const users = msgData.data || []
          $('#users').html('')
          $('#users').append('<option value="all">All</option>')
          $('#users').append(users.map(item => `
            <option value="${item.id}">${item.username}</option>
          `))
          break
        case MessageType.GroupChat:
          console.log(msgData.data)
          break
        case MessageType.SingleChat:
          break
        default:
          break
      }
    }

    ws.onerror = (err) => {
      console.log(err)
    }
  })
</script>

</html>
